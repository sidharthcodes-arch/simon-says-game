let userseq =[];
let gameseq=[];

let gameStarted=false;
let level = 0;
let h2 = document.querySelector("h2");
let buttoncolor=["red","yellow","green","blue"];//button colors
let body = document.querySelector("body");
let table = document.querySelector("table")
let scores =[];

document.addEventListener("keypress",function(){//this function helps to get the game start
    if(gameStarted==false){
        console.log("game started");
        gameStarted=true;
        levelup()
    }
})

function gameflash(btnColor){
    btnColor.classList.add("flash");//adding the white flash
    setTimeout(function(){
        btnColor.classList.remove("flash")//removing the white flash
    },250);
}

function userflash(btnColor){
    btnColor.classList.add("aquaflash");//adding the aqua flash
    setTimeout(function(){
        btnColor.classList.remove("aquaflash")//removing the aqua flash
    },250);
}

function levelup(){
    userseq=[];
    level++                                       //leveling up
    h2.innerText=`Level ${level}`;                //changing the heading to show the level
    let idxNUmber= Math.floor(Math.random() * 4); //generating randomnumber that will be applied to the index
    let randomcolor= buttoncolor[idxNUmber];     //accesing the button colors using the random number generated
    let btn = document.querySelector(`.${randomcolor}`); //accesing the element using the class which got generated by the random number
    // console.log(idxNUmber);
    // console.log(color);
    // console.log(btn);
    gameseq.push(randomcolor)
    console.log(gameseq)
    gameflash(btn);
}

function checkAns(idx){
    if(userseq[idx]===gameseq[idx]){
        if(userseq.length==gameseq.length){
            setTimeout(levelup, 1000);
        }
        
    }
    else{
        body.classList.add("error")
        setTimeout(() => {
            body.classList.remove("error")
            
        }, 250);
        h2.innerHTML =`Game Over! Your score was <b>${level}</b> <br> Press any key to start.`;
       let playerName = prompt("Enter your name:");
            if (playerName) {
                scores.push({ name: playerName, score: level });
                scores.sort((a, b) => b.score - a.score); // Higher scores first
                scores = scores.slice(0, 5);
                updateLeaderboard();
            }
        resetGame();
    }
}

function buttonpress(){
    console.log(this);
    let btn = this;
    userflash(btn);//applying the flash to each btns when clicked
    let usercolor = btn.id;
    userseq.push(usercolor);
    checkAns(userseq.length -1);
}

let btns= document.querySelectorAll('.btn');//accesing all the button elements

for(let btn of btns){
    btn.addEventListener("click",buttonpress);//applying the button press function 
};

function resetGame(){
    gameStarted=false;
    gameseq=[];
    userseq=[];
    level=0;
}
function updateLeaderboard() {
    let tbody = document.querySelector("#leaderboard tbody");
    tbody.innerHTML = "";
    for (let i = 0; i < scores.length; i++) {
        let row = `<tr><td>${scores[i].name}</td><td>${scores[i].score}</td></tr>`;
        tbody.innerHTML += row;
    }
}